// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PharmaSystem.DataModel.DataContext;

#nullable disable

namespace PharmaSystem.Migrations
{
    [DbContext(typeof(PharmacyContext))]
    partial class PharmacyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PharmaSystem.DataModel.Model.Basket", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CostumerID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("EmployeeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("MedicineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TotalValue")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.HasIndex("CostumerID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("MedicineID");

                    b.ToTable("Basket", (string)null);
                });

            modelBuilder.Entity("PharmaSystem.DataModel.Model.Costumer", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Costumer", (string)null);
                });

            modelBuilder.Entity("PharmaSystem.DataModel.Model.Employee", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("PermissionsID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PermissionsID");

                    b.ToTable("Employee", (string)null);
                });

            modelBuilder.Entity("PharmaSystem.DataModel.Model.Medicine", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Amount")
                        .HasColumnType("integer");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(75)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Medicine", (string)null);
                });

            modelBuilder.Entity("PharmaSystem.DataModel.Model.Permissions", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Permission", (string)null);
                });

            modelBuilder.Entity("PharmaSystem.DataModel.Model.Basket", b =>
                {
                    b.HasOne("PharmaSystem.DataModel.Model.Costumer", "Costumer")
                        .WithMany()
                        .HasForeignKey("CostumerID");

                    b.HasOne("PharmaSystem.DataModel.Model.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeID");

                    b.HasOne("PharmaSystem.DataModel.Model.Medicine", "Medicine")
                        .WithMany()
                        .HasForeignKey("MedicineID");

                    b.Navigation("Costumer");

                    b.Navigation("Employee");

                    b.Navigation("Medicine");
                });

            modelBuilder.Entity("PharmaSystem.DataModel.Model.Employee", b =>
                {
                    b.HasOne("PharmaSystem.DataModel.Model.Permissions", null)
                        .WithMany("Employee")
                        .HasForeignKey("PermissionsID");
                });

            modelBuilder.Entity("PharmaSystem.DataModel.Model.Permissions", b =>
                {
                    b.Navigation("Employee");
                });
#pragma warning restore 612, 618
        }
    }
}
